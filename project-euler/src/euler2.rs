// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
// Answer 4613732
pub fn euler_2() -> i32 {
    let mut v = vec![1,2];

    let mut sum: i32 = v.iter().rev().take(2).sum();
    while sum < 4000000 {
        v.push(sum);
        sum = v.iter().rev().take(2).sum();
    }

    let answer: i32 = v.into_iter().filter(|x| x % 2 == 0).sum();
    answer
}


#[cfg(test)]
mod main {
    use super::*;

    #[test]
    fn test_euler_2() {
         assert_eq!(4613732, euler_2());
    }
}